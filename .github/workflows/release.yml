name: Release

on:
  push:
    branches:
      - release

permissions: read-all|write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: github

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Build release
        id: build_release
        run: |
          mvn --batch-mode release:prepare && VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout` && mvn release:perform
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
      - name: Stage release
        run: mkdir staging && cp target/*-image.zip staging/mvn-cd-ci-${{ steps.get_version.outputs.version }}.zip
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: staging/mvn-cd-ci-${{ steps.get_version.outputs.version }}.zip
          asset_name: mvn-cd-ci-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip
